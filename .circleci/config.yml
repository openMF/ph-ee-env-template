version: 2.1
orbs:
  slack: circleci/slack@4.12.5
  helm: circleci/helm@2.0.1
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3
jobs:
  build-and-host-engine:
    docker:
      - image: cimg/python:3.10
    working_directory: ~/repo
    environment:
      TERM: dumb
      PH_RELEASE: 1.11.1
    steps:
      - checkout
      - run: rm -f helm/ph-ee-engine/Chart.lock helm/ph-ee-engine/requirements.lock helm/ph-ee-engine/charts/*
      - helm/install-helm-client:
          version: "v3.8.2"
      - run: helm dep up helm/ph-ee-engine
      - run: helm package helm/ph-ee-engine
      - run: helm repo index .
      - run: echo "$CERT_FILE" | base64 --decode > b64encoded.pem
      - run: chmod 400 b64encoded.pem
      - run: scp -o StrictHostKeyChecking=No -i b64encoded.pem index.yaml ph-ee-engine-$PH_RELEASE-SNAPSHOT.tgz ec2-user@13.233.68.128:~/
      - run: ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo mkdir -p /apps/apache-tomcat-7.0.82/webapps/ROOT/images/ph-ee-engine-$PH_RELEASE-SNAPSHOT
      - run: ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo cp -t /apps/apache-tomcat-7.0.82/webapps/ROOT/images/ph-ee-engine-$PH_RELEASE-SNAPSHOT index.yaml ph-ee-engine-$PH_RELEASE-SNAPSHOT.tgz
  build-and-host-g2p-sandbox:
    docker:
      - image: cimg/python:3.10
    working_directory: ~/repo
    environment:
      TERM: dumb
      G2P_RELEASE: 1.3.1
    steps:
      - checkout
      - run: rm -f helm/g2p-sandbox/Chart.lock helm/g2p-sandbox/requirements.lock helm/g2p-sandbox/charts/*
      - helm/install-helm-client:
          version: "v3.8.2"
      # - run: "sed -i '4s/.*/version: 0.0.0-SNAPSHOT/' helm/g2p-sandbox/requirements.yaml"
      # SED & replace dependency with 0.0.0
      - run: helm dep up helm/g2p-sandbox
      - run: helm package helm/g2p-sandbox
      - run: helm repo index .
      - run: echo "$CERT_FILE" | base64 --decode > b64encoded.pem
      - run: chmod 400 b64encoded.pem
      - run: scp -o StrictHostKeyChecking=No -i b64encoded.pem index.yaml ph-ee-g2psandbox-$G2P_RELEASE.tgz ec2-user@13.233.68.128:~/
      - run: ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo mkdir -p /apps/apache-tomcat-7.0.82/webapps/ROOT/images/ph-ee-g2psandbox-$G2P_RELEASE
      - run: ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo mv -t /apps/apache-tomcat-7.0.82/webapps/ROOT/images/ph-ee-g2psandbox-$G2P_RELEASE index.yaml ph-ee-g2psandbox-$G2P_RELEASE.tgz
  build-host-g2p-fyn-chart:
    docker:
      - image: cimg/python:3.10
    working_directory: ~/repo
    environment:
      TERM: dumb
      FY_SIT_RELEASE: 1.3.0
    steps:
      - run: git clone https://github.com/openmf/ph-ee-env-labs
      - run: cd ph-ee-env-labs && git checkout v$FY_SIT_RELEASE-release && cd ..
      - run: rm -f ph-ee-env-labs/helm/g2p-sandbox-fynarfin-SIT/Chart.lock ph-ee-env-labs/helm/g2p-sandbox-fynarfin-SIT/requirements.lock ph-ee-env-labs/helm/g2p-sandbox-fynarfin-SIT/charts/*
      - helm/install-helm-client:
          version: "v3.8.2"
      # - run: "sed -i '12s/.*/version: 0.0.0/' helm/g2p-sandbox-fynarfin-SIT/Chart.yaml"
      - run: cat ph-ee-env-labs/helm/g2p-sandbox-fynarfin-SIT/Chart.yaml
      - run: helm dep up ph-ee-env-labs/helm/g2p-sandbox-fynarfin-SIT
      - run: helm package ph-ee-env-labs/helm/g2p-sandbox-fynarfin-SIT
      - run: helm repo index .
      - run: echo "$CERT_FILE" | base64 --decode > b64encoded.pem
      - run: chmod 400 b64encoded.pem
      - run: scp -o StrictHostKeyChecking=No -i b64encoded.pem index.yaml ph-ee-g2psandbox-fynarfin-$FY_SIT_RELEASE.tgz ec2-user@13.233.68.128:~/
      - run: ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo mkdir -p /apps/apache-tomcat-7.0.82/webapps/ROOT/images/ph-ee-g2psandbox-fynarfin-$FY_SIT_RELEASE 
      - run: ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo mv -t /apps/apache-tomcat-7.0.82/webapps/ROOT/images/ph-ee-g2psandbox-fynarfin-$FY_SIT_RELEASE index.yaml ph-ee-g2psandbox-fynarfin-$FY_SIT_RELEASE.tgz    
  build-and-host-g2p-sandbox-security:
    docker:
      - image: cimg/python:3.10
    working_directory: ~/repo
    environment:
      TERM: dumb
      SEC_RELEASE: 1.2.0
    steps:
      - checkout
      - run: rm -f helm/g2p-sandbox-security/Chart.lock helm/g2p-sandbox-security/requirements.lock helm/g2p-sandbox-security/charts/*
      - helm/install-helm-client:
          version: "v3.8.2"
      # - run: "sed -i '4s/.*/version: 0.0.0-SNAPSHOT/' helm/g2p-sandbox-security/requirements.yaml"
      # SED & replace dependency with 0.0.0
      - run: helm dep up helm/g2p-sandbox-security
      - run: helm package helm/g2p-sandbox-security
      - run: helm repo index .
      - run: echo "$CERT_FILE" | base64 --decode > b64encoded.pem
      - run: chmod 400 b64encoded.pem
      - run: ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo mkdir -p /apps/apache-tomcat-7.0.82/webapps/ROOT/images/ph-ee-g2psandbox-security
      - run: scp -o StrictHostKeyChecking=No -i b64encoded.pem index.yaml ph-ee-g2psandbox-security-$SEC_RELEASE.tgz ec2-user@13.233.68.128:~/
      - run: ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo mv -t /apps/apache-tomcat-7.0.82/webapps/ROOT/images/ph-ee-g2psandbox-security index.yaml ph-ee-g2psandbox-security-$SEC_RELEASE.tgz    
  upgrade-helm-chart:
    docker:
      - image: cimg/python:3.10
    environment:
      TERM: dumb
      FY_SIT_RELEASE: 1.3.0
    parameters:
      cluster-name:
        description: "sit"
        type: string
      create_namespace:
        default: true
        type: boolean
        description: ""
    steps:
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: "sit"
          aws-region: "$REGION"
      - helm/install-helm-client:
          version: "v3.8.2"
      - run: helm ls --namespace=paymenthub-release
      - kubernetes/install-kubectl
      - run: "kubectl delete clusterroles `kubectl get clusterroles |grep c-role|cut -d ' ' -f1` || echo ' ' "
      - run: "kubectl delete clusterrolebinding `kubectl get clusterrolebinding |grep c-role|cut -d ' ' -f1` || echo ' ' "
      - run: "kubectl delete namespace paymenthub-release || echo ' '"
      - run: "kubectl create namespace paymenthub-release || echo ' '"
      #- run: "kubectl delete crd `kubectl get crd|grep kong |cut -d ' ' -f1` || echo ' ' "
      - helm/upgrade-helm-chart:
          chart: "https://fynarfin.io/images/ph-ee-g2psandbox-1.3.1/ph-ee-g2psandbox-1.3.1.tgz"
          release-name: ph-ee-g2psandbox
          namespace: paymenthub-release
          recreate-pods: true
          add-repo: "https://fynarfin.io/images/ph-ee-g2psandbox-1.3.1"
          wait: true
          timeout: "300s"
      # - run: helm test g2p-sandbox --namespace=paymenthub 
            # reset-values: true
            # dry-run: true
      # - helm/install-helm-chart:
      #     add-repo: "https://fynarfin.io/images/"
      #     chart: "https://fynarfin.io/images/ph-ee-g2psandbox-0.2.0.tgz"
      #     release-name: g2p-sandbox
      #     namespace: ph-test
  create-secret-paymenthub-namespace:
    docker:
      - image: cimg/base:2022.06
    environment:
      TERM: dumb
      NAMESPACE: paymenthub-release
    steps:
      - setup_remote_docker:
            version: 20.10.14
      - kubernetes/install-kubectl
      - run: git clone https://github.com/openmf/ph-ee-env-labs
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: "sit"
          aws-region: "$REGION"
      - run: |
          cd ph-ee-env-labs
          export ENV_NAMESPACE=$NAMESPACE
          kubectl config use-context arn:aws:eks:$REGION:419830066942:cluster/sit
          kubectl config get-contexts
          cd helm/kibana-secret/
          make secrets || echo "kibana" already exists

      - run: |
          cd ph-ee-env-labs
          export ENV_NAMESPACE=$NAMESPACE
          kubectl config use-context arn:aws:eks:$REGION:419830066942:cluster/sit
          kubectl config get-contexts
          cd helm/es-secret/
          make secrets || echo "elastic-certificates" already exists

      - run: |
          cd ph-ee-env-labs
          export ENV_NAMESPACE=$NAMESPACE
          kubectl delete secret bulk-processor-secret -n $ENV_NAMESPACE || echo "delete the secret if exist"
          kubectl create secret generic bulk-processor-secret \
          --from-literal=aws-access-key="$S3_ACCESS_KEY_ID" \
          --from-literal=aws-secret-key="$S3_SECRET_ACCESS_KEY" -n $ENV_NAMESPACE
  helm-test:
    docker:
      - image: cimg/base:2022.06
    environment:
      TERM: dumb
      NAMESPACE: paymenthub-release
    steps:
      - setup_remote_docker:
            version: 20.10.14
      - kubernetes/install-kubectl
      - run: git clone https://github.com/openmf/ph-ee-env-labs
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: "sit"
          aws-region: "$REGION"
      - kubernetes/install-kubectl
      - helm/install-helm-client:
          version: "v3.8.2"
      - run:
          name: Run Helm Tests
          command: |
            helm test ph-ee-g2psandbox --namespace paymenthub-release || echo test
      - run:
          name: Fetch Integration Test Report
          command: |
            #!/bin/bash
            mkdir -p integration_report/test-report
            kubectl cp paymenthub-release/`kubectl get pods -n paymenthub-release | grep g2p-sandbox-test-connection |cut -d " " -f1`:/ph-ee-connector-integration-test/build integration_report/test-report

            # Specify the path to the downloaded file
            downloaded_file="integration_report/test-report/cucumber.xml"

            # Loop until the file is not empty
            while [ ! -s $downloaded_file ]; do
                echo "File is empty, waiting..."
                sleep 60  # You can adjust the sleep interval as needed
                kubectl cp paymenthub-release/`kubectl get pods -n paymenthub-release | grep g2p-sandbox-test-connection |cut -d " " -f1`:/ph-ee-connector-integration-test/build/ integration_report/test-report
                downloaded_file="integration_report/test-report/cucumber.xml  "
            done
            echo "File is no longer empty, processing..."
            # kubectl cp paymenthub-release/`kubectl get pods -n paymenthub-release | grep g2p-sandbox-test-connection |cut -d " " -f1`:/ph-ee-connector-integration-test/build integration_report/test-report

      - store_test_results:
          path: integration_report/test-report/cucumber.xml
      - store_artifacts:
          path: integration_report/test-report/reports/tests/test

workflows:
  deploy:
    jobs:
      - build-and-host-engine:
          context: 
            - AWS
            - Helm
            - slack
      - build-and-host-g2p-sandbox:
          requires:
            - build-and-host-engine
          context: 
            - AWS
            - Helm
            - slack
      - build-host-g2p-fyn-chart:
          requires:
            - build-and-host-g2p-sandbox
          context: 
            - AWS
            - Helm
      - build-and-host-g2p-sandbox-security:
          requires:
            - build-host-g2p-fyn-chart
          context: 
            - AWS
            - Helm
            - slack       
      - upgrade-helm-chart:
          cluster-name: sit
          requires:
            - build-host-g2p-fyn-chart
          context: 
            - AWS
            - Helm
            - slack
      - create-secret-paymenthub-namespace:
          requires: 
            - upgrade-helm-chart
          context: 
            - AWS
            - Helm
            - slack
            - Secrets
      - helm-test:
          requires:
            - create-secret-paymenthub-namespace
          context:
            - AWS
            - Helm
            - slack
