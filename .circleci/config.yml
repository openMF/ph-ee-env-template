version: 2.1
orbs:
  slack: circleci/slack@4.12.5
  helm: circleci/helm@2.0.1
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3
jobs:
  build-and-host-engine:
    docker:
      - image: cimg/python:3.10
    working_directory: ~/repo
    environment:
      TERM: dumb
    steps:
      - checkout
      - run: rm -f helm/ph-ee-engine/Chart.lock helm/ph-ee-engine/requirements.lock helm/ph-ee-engine/charts/*
      - helm/install-helm-client:
          version: "v3.8.2"
      - run: "sed -i '2s/.*/appVersion: 0.0.0/' helm/ph-ee-engine/Chart.yaml"
      - run: "sed -i '5s/.*/version: 0.0.0-SNAPSHOT/' helm/ph-ee-engine/Chart.yaml"
      - run: helm dep up helm/ph-ee-engine
      - run: helm package helm/ph-ee-engine
      - run: helm repo index .
      - run: echo "$CERT_FILE" | base64 --decode > b64encoded.pem
      - run: chmod 400 b64encoded.pem
      - run: scp -o StrictHostKeyChecking=No -i b64encoded.pem index.yaml ph-ee-engine-0.0.0-SNAPSHOT.tgz ec2-user@13.233.68.128:~/
      - run: ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo cp -t /apps/apache-tomcat-7.0.82/webapps/ROOT/images/ph-ee-engine-0.0.0-SNAPSHOT index.yaml ph-ee-engine-0.0.0-SNAPSHOT.tgz
  build-and-host-g2p-sandbox:
    docker:
      - image: cimg/python:3.10
    working_directory: ~/repo
    environment:
      TERM: dumb
    steps:
      - checkout
      - run: rm -f helm/g2p-sandbox/Chart.lock helm/g2p-sandbox/requirements.lock helm/g2p-sandbox/charts/*
      - helm/install-helm-client:
          version: "v3.8.2"
      - run: "sed -i '6s/.*/appVersion: 0.0.0/' helm/g2p-sandbox/Chart.yaml"
      - run: "sed -i '7s/.*/version: 0.0.0/' helm/g2p-sandbox/Chart.yaml" 
      # - run: "sed -i '4s/.*/version: 0.0.0-SNAPSHOT/' helm/g2p-sandbox/requirements.yaml"
      # SED & replace dependency with 0.0.0
      - run: helm dep up helm/g2p-sandbox
      - run: helm package helm/g2p-sandbox
      - run: helm repo index .
      - run: echo "$CERT_FILE" | base64 --decode > b64encoded.pem
      - run: chmod 400 b64encoded.pem
      - run: scp -o StrictHostKeyChecking=No -i b64encoded.pem index.yaml ph-ee-g2psandbox-0.0.0.tgz ec2-user@13.233.68.128:~/
      - run: ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo mv -t /apps/apache-tomcat-7.0.82/webapps/ROOT/images/ph-ee-g2psandbox-0.0.0 index.yaml ph-ee-g2psandbox-0.0.0.tgz
  build-host-g2p-fyn-chart:
    docker:
      - image: cimg/python:3.10
    working_directory: ~/repo
    environment:
      TERM: dumb
    steps:
      - run: git clone https://github.com/openmf/ph-ee-env-labs
      - run: rm -f ph-ee-env-labs/helm/g2p-sandbox-fynarfin-SIT/Chart.lock ph-ee-env-labs/helm/g2p-sandbox-fynarfin-SIT/requirements.lock ph-ee-env-labs/helm/g2p-sandbox-fynarfin-SIT/charts/*
      - helm/install-helm-client:
          version: "v3.8.2"
      # - run: "sed -i '12s/.*/version: 0.0.0/' helm/g2p-sandbox-fynarfin-SIT/Chart.yaml"
      - run: cat ph-ee-env-labs/helm/g2p-sandbox-fynarfin-SIT/Chart.yaml
      - run: helm dep up ph-ee-env-labs/helm/g2p-sandbox-fynarfin-SIT
      - run: helm package ph-ee-env-labs/helm/g2p-sandbox-fynarfin-SIT
      - run: helm repo index .
      - run: echo "$CERT_FILE" | base64 --decode > b64encoded.pem
      - run: chmod 400 b64encoded.pem
      - run: scp -o StrictHostKeyChecking=No -i b64encoded.pem index.yaml ph-ee-g2psandbox-fynarfin-0.2.0.tgz ec2-user@13.233.68.128:~/
      - run: ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo mv -t /apps/apache-tomcat-7.0.82/webapps/ROOT/images/ph-ee-g2psandbox-fynarfin index.yaml ph-ee-g2psandbox-fynarfin-0.2.0.tgz    
  build-and-host-g2p-sandbox-security:
    docker:
      - image: cimg/python:3.10
    working_directory: ~/repo
    environment:
      TERM: dumb
    steps:
      - checkout
      - run: rm -f helm/g2p-sandbox-security/Chart.lock helm/g2p-sandbox-security/requirements.lock helm/g2p-sandbox-security/charts/*
      - helm/install-helm-client:
          version: "v3.8.2"
      - run: "sed -i '6s/.*/appVersion: 0.0.0/' helm/g2p-sandbox-security/Chart.yaml"
      - run: "sed -i '7s/.*/version: 0.0.0/' helm/g2p-sandbox-security/Chart.yaml" 
      # - run: "sed -i '4s/.*/version: 0.0.0-SNAPSHOT/' helm/g2p-sandbox-security/requirements.yaml"
      # SED & replace dependency with 0.0.0
      - run: helm dep up helm/g2p-sandbox-security
      - run: helm package helm/g2p-sandbox-security
      - run: helm repo index .
      - run: echo "$CERT_FILE" | base64 --decode > b64encoded.pem
      - run: chmod 400 b64encoded.pem
      - run: ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo mkdir -p /apps/apache-tomcat-7.0.82/webapps/ROOT/images/ph-ee-g2psandbox-security
      - run: scp -o StrictHostKeyChecking=No -i b64encoded.pem index.yaml ph-ee-g2psandbox-security-0.0.0.tgz ec2-user@13.233.68.128:~/
      - run: ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo mv -t /apps/apache-tomcat-7.0.82/webapps/ROOT/images/ph-ee-g2psandbox-security index.yaml ph-ee-g2psandbox-security-0.0.0.tgz
  upgrade-helm-chart:
    docker:
      - image: cimg/python:3.10
    parameters:
      cluster-name:
        description: "sit"
        type: string
    steps:
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: "sit"
          aws-region: "$REGION"
      - helm/install-helm-client:
          version: "v3.8.2"
      - run: helm ls --namespace=paymenthub
      - helm/upgrade-helm-chart:
          chart: "https://fynarfin.io/images/ph-ee-g2psandbox-fynarfin/ph-ee-g2psandbox-fynarfin-0.2.0.tgz"
          release-name: g2p-sandbox
          namespace: paymenthub
          recreate-pods: true
          add-repo: "https://fynarfin.io/images/ph-ee-g2psandbox-fynarfin"
          wait: true
          timeout: "300s"
      # - run: helm test g2p-sandbox --namespace=paymenthub 
            # reset-values: true
            # dry-run: true
      # - helm/install-helm-chart:
      #     add-repo: "https://fynarfin.io/images/"
      #     chart: "https://fynarfin.io/images/ph-ee-g2psandbox-0.2.0.tgz"
      #     release-name: g2p-sandbox
      #     namespace: ph-test
  test-chart-gov:
    docker:
      - image: cimg/openjdk:17.0.0
    steps:
      - run: git clone https://github.com/openmf/ph-ee-integration-test
      - run: 
          name: Ngrok setup
          command: curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null && echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list && sudo apt update && sudo apt install ngrok
      - run:
          name: Test execution
          command: |
            ngrok config add-authtoken $AUTH_TOKEN
            echo "web_addr: $LOCAL_PORT" >> /home/circleci/.config/ngrok/ngrok.yml
            ngrok http 53013 > /dev/null &
            echo -n "Extracting ngrok public url ."
            NGROK_PUBLIC_URL=""
            while [ -z "$NGROK_PUBLIC_URL" ]; do
              # Run 'curl' against ngrok API and extract public (using 'sed' command)
              export NGROK_PUBLIC_URL=$(curl --silent --max-time 10 --connect-timeout 5 \
                                        --show-error http://127.0.0.1:$LOCAL_PORT/api/tunnels | \
                                        sed -nE 's/.*public_url":"https:..([^"]*).*/\1/p')
              sleep 1
              echo -n "."
            done

            export CALLBACK_URL="https://$NGROK_PUBLIC_URL"
            echo -n "Public url ."
            echo $CALLBACK_URL
            cd ph-ee-integration-test && ./gradlew test -Dcucumber.filter.tags="@gov" 
            echo -n "Test execution is completed, kill ngrok"
            pkill ngrok
      - store_test_results:
          path: ph-ee-integration-test/build/cucumber.xml
      - store_artifacts:
          path: ph-ee-integration-test/build/reports/tests/test
  test-chart-ams:
    docker:
      - image: cimg/openjdk:17.0.0
    steps:
      - run: git clone https://github.com/openmf/ph-ee-integration-test
      - run: cd ph-ee-integration-test && ./gradlew test -Dcucumber.filter.tags="@amsIntegration"
      - store_test_results:
          path: ph-ee-integration-test/build/cucumber.xml
      - store_artifacts:
          path: ph-ee-integration-test/build/reports/tests/test
workflows:
  deploy:
    jobs:
      - build-and-host-engine:
          context: 
            - AWS
            - Helm
            - slack
      - build-and-host-g2p-sandbox:
          requires:
            - build-and-host-engine
          context: 
            - AWS
            - Helm
            - slack
      - build-host-g2p-fyn-chart:
          requires:
            - build-and-host-g2p-sandbox
          context: 
            - AWS
            - Helm
      - build-and-host-g2p-sandbox-security:
          requires:
            - build-host-g2p-fyn-chart
          context: 
            - AWS
            - Helm
            - slack      
      - upgrade-helm-chart:
          cluster-name: sit
          requires:
            - build-host-g2p-fyn-chart
          context: 
            - AWS
            - Helm
            - slack
      - test-chart-gov:
          requires:
            - upgrade-helm-chart
          context: 
            - AWS
            - Helm
            - slack
            - Ngrok
      - test-chart-ams:
          requires:
            - upgrade-helm-chart
          context:
            - AWS
            - Helm
            - slack
