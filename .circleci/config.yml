version: 2.1
orbs:
  slack: circleci/slack@4.12.5
  helm: circleci/helm@2.0.1
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3
  mifos-orb: mifos/docker-image-availability-check-and-upgrade@dev:first

jobs:
  build-and-host-engine:
    docker:
      - image: cimg/python:3.10
    working_directory: ~/repo
    environment:
      TERM: dumb
    steps:
      - checkout
      - run: rm -f helm/ph-ee-engine/Chart.lock helm/ph-ee-engine/requirements.lock helm/ph-ee-engine/charts/*
      - helm/install-helm-client:
          version: "v3.8.2"
      - run:
          name: build-and-host-engine
          environment:
            JIRA_STORY: ''
            JIRA_STORY_DIR: ''
          command: |
            if [ "$CIRCLE_BRANCH" != "master" ]; then
              PR_NUMBER=$(basename $CIRCLE_PULL_REQUEST)
              PR_TITLE=$(curl -sSL "https://api.github.com/repos/openmf/$CIRCLE_PROJECT_REPONAME/pulls/$PR_NUMBER" | jq -r '.title')
              JIRA_STORY=-$(echo $PR_TITLE | cut -d "[" -f2 | cut -d "]" -f1 | tr '[A-Z]' '[a-z]')
              if [ -z "$JIRA_STORY" ]; then echo "Invalid PR title" && exit 1; else echo "Ticket NO: $JIRA_STORY" && JIRA_STORY_DIR=$(echo /jira-story-version); fi
              echo Charts will save in https://fynarfin.io/images$JIRA_STORY_DIR
            fi
            sed -i "5s/.*/version: 0.0.0-SNAPSHOT$JIRA_STORY/" helm/ph-ee-engine/Chart.yaml
            helm dep up helm/ph-ee-engine
            helm package helm/ph-ee-engine
            helm repo index .
            echo "$CERT_FILE" | base64 --decode > b64encoded.pem
            chmod 400 b64encoded.pem
            ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo mkdir -p /apps/apache-tomcat-7.0.82/webapps/ROOT/images$JIRA_STORY_DIR/ph-ee-engine-0.0.0-SNAPSHOT$JIRA_STORY
            scp -o StrictHostKeyChecking=No -i b64encoded.pem index.yaml ph-ee-engine-0.0.0-SNAPSHOT$JIRA_STORY.tgz ec2-user@13.233.68.128:~/
            ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo cp -t /apps/apache-tomcat-7.0.82/webapps/ROOT/images$JIRA_STORY_DIR/ph-ee-engine-0.0.0-SNAPSHOT$JIRA_STORY index.yaml ph-ee-engine-0.0.0-SNAPSHOT$JIRA_STORY.tgz
  build-and-host-g2p-sandbox:
    docker:
      - image: cimg/python:3.10
    working_directory: ~/repo
    environment:
      TERM: dumb
    steps:
      - checkout
      - run: rm -f helm/g2p-sandbox/Chart.lock helm/g2p-sandbox/requirements.lock helm/g2p-sandbox/charts/*
      - helm/install-helm-client:
          version: "v3.8.2"
      - run:
          name: build-and-host-g2p-sandbox
          environment:
            JIRA_STORY: ''
            JIRA_STORY_DIR: ''
          command: |
            if [ "$CIRCLE_BRANCH" != "master" ]; then
              PR_NUMBER=$(basename $CIRCLE_PULL_REQUEST)
              PR_TITLE=$(curl -sSL "https://api.github.com/repos/openmf/$CIRCLE_PR_REPONAME/pulls/$PR_NUMBER" | jq -r '.title')
              JIRA_STORY=-$(echo $PR_TITLE | cut -d "[" -f2 | cut -d "]" -f1 | tr '[A-Z]' '[a-z]')
              if [ -z "$JIRA_STORY" ]; then echo "Invalid PR title" && exit 1; else echo "Ticket NO: $JIRA_STORY" && JIRA_STORY_DIR=$(echo /jira-story-version); fi
            fi
            CHART_URL="https://fynarfin.io/images$JIRA_STORY_DIR/ph-ee-engine-0.0.0-SNAPSHOT$JIRA_STORY"
            if curl --output /dev/null --silent --head --fail "$CHART_URL"; then
              sed -i "10s@^ *repository:.*\$@  repository: $CHART_URL@" helm/g2p-sandbox/Chart.yaml
              sed -i "11s@^ *version:.*\$@  version: 0.0.0-SNAPSHOT$JIRA_STORY@" helm/g2p-sandbox/Chart.yaml
              echo "chart used: < $CHART_URL >"
            else
              CHART_URL="https://fynarfin.io/images/ph-ee-engine-0.0.0-SNAPSHOT"
              echo "chart used: < $CHART_URL >"
            fi
            sed -i "5s/.*/version: 0.0.0$JIRA_STORY/" helm/g2p-sandbox/Chart.yaml
            cat helm/g2p-sandbox/Chart.yaml
            helm dep up helm/g2p-sandbox
            helm package helm/g2p-sandbox
            helm repo index .
            echo "$CERT_FILE" | base64 --decode > b64encoded.pem
            chmod 400 b64encoded.pem
            ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo mkdir -p /apps/apache-tomcat-7.0.82/webapps/ROOT/images$JIRA_STORY_DIR/ph-ee-g2psandbox-0.0.0$JIRA_STORY
            scp -o StrictHostKeyChecking=No -i b64encoded.pem index.yaml ph-ee-g2psandbox-0.0.0$JIRA_STORY.tgz ec2-user@13.233.68.128:~/
            ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo mv -t /apps/apache-tomcat-7.0.82/webapps/ROOT/images$JIRA_STORY_DIR/ph-ee-g2psandbox-0.0.0$JIRA_STORY index.yaml ph-ee-g2psandbox-0.0.0$JIRA_STORY.tgz
  build-host-g2p-fyn-chart:
    docker:
      - image: cimg/python:3.10
    working_directory: ~/repo
    environment:
      TERM: dumb
    steps:
      - run: git clone https://github.com/openmf/ph-ee-env-labs
      - run: rm -f ph-ee-env-labs/helm/g2p-sandbox-fynarfin-SIT/Chart.lock ph-ee-env-labs/helm/g2p-sandbox-fynarfin-SIT/requirements.lock ph-ee-env-labs/helm/g2p-sandbox-fynarfin-SIT/charts/*
      - helm/install-helm-client:
          version: "v3.8.2"
      # - run: "sed -i '12s/.*/version: 0.0.0/' helm/g2p-sandbox-fynarfin-SIT/Chart.yaml"
      - run:
          name: build-host-g2p-fyn-chart
          environment:
            JIRA_STORY: ''
            JIRA_STORY_DIR: ''
          command: |
            if [ "$CIRCLE_BRANCH" != "master" ]; then
              PR_NUMBER=$(basename $CIRCLE_PULL_REQUEST)
              PR_TITLE=$(curl -sSL "https://api.github.com/repos/openmf/$CIRCLE_PR_REPONAME/pulls/$PR_NUMBER" | jq -r '.title')
              JIRA_STORY=-$(echo $PR_TITLE | cut -d "[" -f2 | cut -d "]" -f1 | tr '[A-Z]' '[a-z]')
              if [ -z "$JIRA_STORY" ]; then echo "Invalid PR title" && exit 1; else echo "Ticket NO: $JIRA_STORY" && JIRA_STORY_DIR=$(echo /jira-story-version); fi
            fi
            CHART_URL="https://fynarfin.io/images$JIRA_STORY_DIR/ph-ee-g2psandbox-0.0.0$JIRA_STORY"
            if curl --output /dev/null --silent --head --fail "$CHART_URL"; then
              sed -i "11s@^ *repository:.*\$@  repository: $CHART_URL@" ph-ee-env-labs/helm/g2p-sandbox-fynarfin-SIT/Chart.yaml
              sed -i "12s@^ *version:.*\$@  version: 0.0.0$JIRA_STORY@" ph-ee-env-labs/helm/g2p-sandbox-fynarfin-SIT/Chart.yaml
              echo "chart used: < $CHART_URL >"
            else
              CHART_URL="https://fynarfin.io/images/ph-ee-g2psandbox-0.0.0"
              echo "chart used: < $CHART_URL >"
            fi
            sed -i "6s/.*/version: 0.2.0$JIRA_STORY/" ph-ee-env-labs/helm/g2p-sandbox-fynarfin-SIT/Chart.yaml
            cat ph-ee-env-labs/helm/g2p-sandbox-fynarfin-SIT/Chart.yaml
            helm dep up ph-ee-env-labs/helm/g2p-sandbox-fynarfin-SIT
            helm package ph-ee-env-labs/helm/g2p-sandbox-fynarfin-SIT
            helm repo index .
            echo "$CERT_FILE" | base64 --decode > b64encoded.pem
            chmod 400 b64encoded.pem
            ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo mkdir -p /apps/apache-tomcat-7.0.82/webapps/ROOT/images$JIRA_STORY_DIR/ph-ee-g2psandbox-fynarfin$JIRA_STORY
            scp -o StrictHostKeyChecking=No -i b64encoded.pem index.yaml ph-ee-g2psandbox-fynarfin-0.2.0$JIRA_STORY.tgz ec2-user@13.233.68.128:~/
            ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo mv -t /apps/apache-tomcat-7.0.82/webapps/ROOT/images$JIRA_STORY_DIR/ph-ee-g2psandbox-fynarfin$JIRA_STORY index.yaml ph-ee-g2psandbox-fynarfin-0.2.0$JIRA_STORY.tgz
  build-and-host-g2p-sandbox-security:
    docker:
      - image: cimg/python:3.10
    working_directory: ~/repo
    environment:
      TERM: dumb
    steps:
      - checkout
      - run: rm -f helm/g2p-sandbox-security/Chart.lock helm/g2p-sandbox-security/requirements.lock helm/g2p-sandbox-security/charts/*
      - helm/install-helm-client:
          version: "v3.8.2"
      - run:
          name: build-and-host-g2p-sandbox-security
          environment:
            JIRA_STORY: ''
            JIRA_STORY_DIR: ''
          command: |
            if [ "$CIRCLE_BRANCH" != "master" ]; then
              PR_NUMBER=$(basename $CIRCLE_PULL_REQUEST)
              PR_TITLE=$(curl -sSL "https://api.github.com/repos/openmf/$CIRCLE_PR_REPONAME/pulls/$PR_NUMBER" | jq -r '.title')
              JIRA_STORY=-$(echo $PR_TITLE | cut -d "[" -f2 | cut -d "]" -f1 | tr '[A-Z]' '[a-z]')
              if [ -z "$JIRA_STORY" ]; then echo "Invalid PR title" && exit 1; else echo "Ticket NO: $JIRA_STORY" && JIRA_STORY_DIR=$(echo /jira-story-version); fi
            fi
            CHART_URL="https://fynarfin.io/images$JIRA_STORY_DIR/ph-ee-engine-0.0.0-SNAPSHOT$JIRA_STORY"
            if curl --output /dev/null --silent --head --fail "$CHART_URL"; then
              sed -i "10s@^ *repository:.*\$@  repository: $CHART_URL@" helm/g2p-sandbox-security/Chart.yaml
              sed -i "11s@^ *version:.*\$@  version: 0.0.0-SNAPSHOT$JIRA_STORY@" helm/g2p-sandbox-security/Chart.yaml
              echo "chart used: < $CHART_URL >"
            else
              CHART_URL="https://fynarfin.io/images/ph-ee-engine-0.0.0-SNAPSHOT"
              echo "chart used: < $CHART_URL >"
            fi
            sed -i "5s/.*/version: 0.0.0$JIRA_STORY/" helm/g2p-sandbox-security/Chart.yaml
            cat helm/g2p-sandbox-security/Chart.yaml
            # - run: "sed -i '4s/.*/version: 0.0.0-SNAPSHOT/' helm/g2p-sandbox-security/requirements.yaml"
            # SED & replace dependency with 0.0.0
            helm dep up helm/g2p-sandbox-security
            helm package helm/g2p-sandbox-security
            helm repo index .
            echo "$CERT_FILE" | base64 --decode > b64encoded.pem
            chmod 400 b64encoded.pem
            ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo mkdir -p /apps/apache-tomcat-7.0.82/webapps/ROOT/images$JIRA_STORY_DIR/ph-ee-g2psandbox-security$JIRA_STORY
            scp -o StrictHostKeyChecking=No -i b64encoded.pem index.yaml ph-ee-g2psandbox-security-0.0.0$JIRA_STORY.tgz ec2-user@13.233.68.128:~/
            ssh -i b64encoded.pem -o StrictHostKeyChecking=No ec2-user@13.233.68.128 sudo mv -t /apps/apache-tomcat-7.0.82/webapps/ROOT/images$JIRA_STORY_DIR/ph-ee-g2psandbox-security$JIRA_STORY index.yaml ph-ee-g2psandbox-security-0.0.0$JIRA_STORY.tgz
  docker-image-availability-check-and-upgrade:
    docker:
      - image: cimg/python:3.10
    environment:
      TERM: dumb
    steps:
      - mifos-orb/docker-image-availability-check-and-upgrade:
          namespace: paymenthub
          chart-base-url: https://fynarfin.io/images
          chart-name: ph-ee-g2psandbox-fynarfin
          chart-version: 0.2.0
#          chart: "https://fynarfin.io/images/ph-ee-g2psandbox-fynarfin/ph-ee-g2psandbox-fynarfin-0.2.0.tgz"
          release-name: g2p-sandbox
#          add-repo: "https://fynarfin.io/images/ph-ee-g2psandbox-fynarfin"
          cluster-name: "sit"
          aws-region: "$REGION"
          service-file-path: https://raw.githubusercontent.com/openMF/ph-ee-env-labs/master/.circleci/services.txt

  test-chart-gov:
    docker:
      - image: cimg/openjdk:17.0.0
    steps:
      - run: git clone https://github.com/openmf/ph-ee-integration-test
      - run: 
          name: Ngrok setup
          command: curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null && echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list && sudo apt update && sudo apt install ngrok
      - run:
          name: Test execution
          command: |
            ngrok config add-authtoken $AUTH_TOKEN
            echo "web_addr: $LOCAL_PORT" >> /home/circleci/.config/ngrok/ngrok.yml
            ngrok http 53013 > /dev/null &
            echo -n "Extracting ngrok public url ."
            NGROK_PUBLIC_URL=""
            while [ -z "$NGROK_PUBLIC_URL" ]; do
              # Run 'curl' against ngrok API and extract public (using 'sed' command)
              export NGROK_PUBLIC_URL=$(curl --silent --max-time 10 --connect-timeout 5 \
                                        --show-error http://127.0.0.1:$LOCAL_PORT/api/tunnels | \
                                        sed -nE 's/.*public_url":"https:..([^"]*).*/\1/p')
              sleep 1
              echo -n "."
            done

            export CALLBACK_URL="https://$NGROK_PUBLIC_URL"
            echo -n "Public url ."
            echo $CALLBACK_URL
            cd ph-ee-integration-test && ./gradlew test -Dcucumber.filter.tags="@gov" 
            echo -n "Test execution is completed, kill ngrok"
            pkill ngrok
      - store_test_results:
          path: ph-ee-integration-test/build/cucumber.xml
      - store_artifacts:
          path: ph-ee-integration-test/build/reports/tests/test
  test-chart-ams:
    docker:
      - image: cimg/openjdk:17.0.0
    steps:
      - run: git clone https://github.com/openmf/ph-ee-integration-test
      - run: cd ph-ee-integration-test && ./gradlew test -Dcucumber.filter.tags="@amsIntegration"
      - store_test_results:
          path: ph-ee-integration-test/build/cucumber.xml
      - store_artifacts:
          path: ph-ee-integration-test/build/reports/tests/test
workflows:
  deploy:
    jobs:
      - build-and-host-engine:
          context:
            - AWS
            - Helm
            - slack
      - build-and-host-g2p-sandbox:
          requires:
            - build-and-host-engine
          context: 
            - AWS
            - Helm
            - slack
      - build-host-g2p-fyn-chart:
          requires:
            - build-and-host-g2p-sandbox
          context: 
            - AWS
            - Helm
      - build-and-host-g2p-sandbox-security:
          requires:
            - build-host-g2p-fyn-chart
          context: 
            - AWS
            - Helm
            - slack
      - docker-image-availability-check-and-upgrade:
          context:
            - AWS
            - Helm
            - slack
          requires:
            - build-host-g2p-fyn-chart
      - test-chart-gov:
          requires:
            - docker-image-availability-check-and-upgrade
          context: 
            - AWS
            - Helm
            - slack
            - Ngrok
      - test-chart-ams:
          requires:
            - docker-image-availability-check-and-upgrade
          context:
            - AWS
            - Helm
            - slack
