{{- if .Values.messagegateway.enabled -}}

apiVersion: {{ .Values.deployment.apiversion }}
kind: Deployment
metadata:
  name: "message-gateway"
  labels:
    app: message-gateway
spec:
  replicas: {{ .Values.messagegateway.replicas }}
  selector:
    matchLabels:
      app: message-gateway
  template:
    metadata:
      labels:
        app: message-gateway
      annotations:
{{- if .Values.messagegateway.deployment.annotations }}
{{ toYaml .Values.messagegateway.deployment.annotations | indent 8 }}
{{- end }}
    spec:
      containers:
        - name: message-gateway
          image: "{{ .Values.messagegateway.image }}:{{ .Values.messagegateway.imageTag }}"  
          ports:
            - containerPort: 9191
          imagePullPolicy: "{{ .Values.messagegateway.imagePullPolicy }}"
          resources:
            limits:
              memory: "{{ .Values.messagegateway.limits.memory }}"
              cpu: "{{ .Values.messagegateway.limits.cpu }}"
            requests:
              memory: "{{ .Values.messagegateway.requests.memory }}"
              cpu: "{{ .Values.messagegateway.requests.cpu }}"
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 9191
            initialDelaySeconds: 120
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 9191
            initialDelaySeconds: 120
            periodSeconds: 30

          env:
            - name: "SPRING_DATASOURCE_URL"
              value: "{{ .Values.messagegateway.DATASOURCE_URL }}"
            - name: "MYSQL_USERNAME"
              value: "{{ .Values.messagegateway.MYSQL_USERNAME }}"
            - name: "MYSQL_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: "messagegateway-secret"
                  key: "database-password"
            - name: "CALLBACKCONFIG_HOST"
              value: "{{ .Values.messagegateway.CALLBACKCONFIG_HOST }}"
            - name: "HOSTCONFIG_HOST"
              value: "{{ .Values.messagegateway.HOSTCONFIG_HOST }}"
            - name: "PROVIDERSOURCE_FROMDATABASE"
              value: "{{ .Values.messagegateway.PROVIDERSOURCE_FROMDATABASE }}"
            - name: "PROVIDERSOURCE_FROMYML"
              value: "{{ .Values.messagegateway.PROVIDERSOURCE_FROMYML }}"
            - name: "LOGGING_LEVEL_ROOT"
              value: "{{ .Values.messagegateway.LOGGING_LEVEL_ROOT }}"
            - name: "PROVIDERKEYS_TELERIVETAPIKEY"
              valueFrom:
                secretKeyRef:
                  name: "messagegateway-secret"
                  key: "api-key"
            - name: "PROVIDERKEYS_TELERIVETPROJECTID"
              valueFrom:
                secretKeyRef:
                  name: "messagegateway-secret"
                  key: "project-id"
          volumeMounts:
            - name: ph-ee-config
              mountPath: "/config"
      initContainers:
        - name: wait-db
          image: jwilder/dockerize
          imagePullPolicy: IfNotPresent
          args:
            - -timeout=120s
            - -wait
            - tcp://{{ .Values.operations_app.datasource.host }}:3306
      volumes:
        - name: ph-ee-config
          configMap:
            name: ph-ee-config
---
apiVersion: {{ .Values.service.apiversion }}
kind: Service
metadata:
  labels:
    app: message-gateway
  name: message-gateway
spec:
  ports:
    - name: port
      port: 80
      protocol: TCP
      targetPort: 9191
  selector:
    app: message-gateway
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: {{ .Values.secret.apiversion }}
kind: Secret
metadata:
  name: messagegateway-secret
type: Opaque
data:
  api-key: "{{ .Values.messagegateway.secret.value.api_key | b64enc }}"
  project-id: "{{ .Values.messagegateway.secret.value.project_id | b64enc }}"
  database-password: "{{ .Values.messagegateway.MYSQL_PASSWORD | b64enc }}"
---
{{- if .Values.messagegateway.ingress.enabled }}
apiVersion: {{ .Values.ingress.apiversion }}
kind: Ingress
metadata:
  name: message-gateway
  annotations:
{{- if .Values.messagegateway.ingress.annotations }}
{{ toYaml .Values.messagegateway.ingress.annotations | indent 4 }}
{{- end }}
spec:
  rules:
    - host: "{{ .Values.messagegateway.hostname }}"
      http:
        paths:
          - path: "{{ .Values.messagegateway.ingress.path }}"
            pathType: Prefix
            backend:
{{- if .Values.messagegateway.ingress.backend }}
{{ toYaml .Values.messagegateway.ingress.backend | indent 14 }}
{{- end }} 

  tls:
    - hosts:
        - "{{ .Values.wildcardhostname }}"
      secretName: "{{ .Values.tls }}"
{{- end }}

{{- end }}

