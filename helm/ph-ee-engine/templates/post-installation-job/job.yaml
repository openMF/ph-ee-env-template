{{- if .Values.post_installation_job.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: post-installation-job
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  template:
    spec:
      serviceAccountName: job-creator
      containers:
      - name: post-installation-job
        image: ubuntu:latest # Replace with the Docker image containing Git and other tools "cimg/base:2022.06"
        securityContext:
          privileged: true
        command:
        - "/bin/sh"
        - "-c"
        args:
        - |
          # Add Docker's official GPG key:
          apt-get update
          apt-get --assume-yes install ca-certificates curl gnupg 
          install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          chmod a+r /etc/apt/keyrings/docker.gpg

          # Add the repository to Apt sources:
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
            tee /etc/apt/sources.list.d/docker.list > /dev/null
          apt-get update 
          apt-get --assume-yes install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin 
          
          # starting docker-deamon
          service docker start
          
          #install make
          apt-get install --assume-yes make
          
          #install kubectl 
          apt-get update
          # apt-transport-https may be a dummy package; if so, you can skip that package
          apt-get install -y apt-transport-https ca-certificates curl gpg

          curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key |  gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

          # This overwrites any existing configuration in /etc/apt/sources.list.d/kubernetes.list
          echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' |  tee /etc/apt/sources.list.d/kubernetes.list

          apt-get update
          apt-get install -y kubelet kubeadm kubectl
          apt-mark hold kubelet kubeadm kubectl

          export ENV_NAMESPACE={{ .Release.Namespace }}
          echo "check-namespace"
          echo $ENV_NAMESPACE
          git clone --depth 1 --branch v1.4.0 https://github.com/openMF/ph-ee-env-labs.git 
          cd ph-ee-env-labs/helm/es-secret/
          make secrets || echo "elastic-certificates" already exists

          cd ../../helm/kibana-secret/
          make secrets || echo "kibana" already exists

          #insatll netcat
          apt install -y netcat
          until nc -vz ph-ee-zeebe-ops 80; do echo "Waiting for zeebe-ops service"; sleep 2; done;
          
          #Deploy BPMN 
          kubectl port-forward service/ph-ee-zeebe-ops 5000:80 -n {{ .Release.Namespace }} & 

          cd ../../orchestration
          ls
          sed -i "/HOST=/c\HOST=http://localhost:5000/zeebe/upload" deployBpmn.sh
          cat deployBpmn.sh
          cd ..
          sleep 10
          sh orchestration/deployBpmn.sh
          echo "Configurations successful"
      restartPolicy: Never
  backoffLimit: 0 # Adjust as needed
  # successfulJobsHistoryLimit: 0  # Number of successful completions to retain
  # failedJobsHistoryLimit: 0 # Number of failed completions to retain
{{- end }}