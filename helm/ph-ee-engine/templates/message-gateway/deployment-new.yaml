# Deploy singleton instance in the whole cluster for some unique data sources, like aws input
{{- if .Values.messagegateway.enabled -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "message-gateway.fullname" . }}
  labels:
    app: "{{ template "message-gateway.fullname" . }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: '{{ .Release.Service }}'

  {{- if .Values.messagegateway.deployment.annotations }}
  annotations:
    {{- range $key, $value := .Values.deployment.annotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
  {{- end }}
spec:
  replicas: {{ .Values.messagegateway.replicas }}
  selector:
    matchLabels:
      app: "{{ template "message-gateway.fullname" . }}"
  template:
    metadata:
      annotations:
{{- if .Values.messagegateway.deployment.annotations }}
{{ toYaml .Values.messagegateway.deployment.annotations | indent 8 }}
{{- end }}
        configChecksum: {{ include (print .Template.BasePath "/configmap.yaml") . | sha256sum | trunc 63 }}
        {{- end }}
      labels:
        app: '{{ template "message-gateway.fullname" . }}'
        chart: '{{ .Chart.Name }}-{{ .Chart.Version }}'
    spec:
      affinity: {{ toYaml .Values.messagegateway.deployment.affinity | nindent 8 }}
      nodeSelector: {{ toYaml .Values.messagegateway.deployment.nodeSelector | nindent 8 }}
      tolerations: {{ toYaml ( .Values.messagegateway.tolerations | default .Values.messagegateway.deployment.tolerations ) | nindent 8 }}
      {{- if .Values.messagegateway.priorityClassName }}
      priorityClassName: {{ .Values.messagegateway.priorityClassName  }}
      {{- end }}
      serviceAccountName: {{ template "message-gateway.serviceAccount" . }}
      terminationGracePeriodSeconds: {{ .Values.messagegateway.terminationGracePeriod }}
      {{- if .Values.messagegateway.deployment.hostAliases }}
      hostAliases: {{ toYaml .Values.messagegateway.deployment.hostAliases | nindent 8 }}
      {{- end }}
      volumes:
      {{- range .Values.messagegateway.secretMounts | default .Values.messagegateway.deployment.secretMounts }}
      - name: {{ .name }}
        secret:
          secretName: {{ .secretName }}
      {{- end }}
      {{- if .Values.message-gatewayConfig }}
      - name: message-gateway-config
        configMap:
          defaultMode: 0600
          name: {{ template "message-gateway.fullname" . }}-config
      {{- if .Values.messagegateway.extraVolumes | default .Values.messagegateway.deployment.extraVolumes }}
{{ toYaml ( .Values.messagegateway.extraVolumes | default .Values.messagegateway.deployment.extraVolumes ) | indent 6 }}
      {{- end }}

      {{- if .Values.messagegateway.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.messagegateway.imagePullSecrets | indent 8 }}
      {{- end }}
      {{- if .Values.messagegateway.extraInitContainers }}
      initContainers:
        - name: wait-db
          image: jwilder/dockerize
          imagePullPolicy: IfNotPresent
          args:
            - -timeout=120s
            - -wait
            - tcp://{{ .Values.operations_app.datasource.host }}:3306
      # All the other beats accept a string here while
      # message-gateway accepts a valid yaml array. We're keeping
      # this as a backwards compatible change, while adding
      # also a way to pass a string as other templates to
      # make these implementations consistent.
      # https://github.com/elastic/helm-charts/issues/490
      {{- if eq "string" (printf "%T" .Values.extraInitContainers) }}
{{ tpl .Values.extraInitContainers . | indent 6 }}
      {{- else }}
{{ toYaml .Values.extraInitContainers | indent 6 }}
      {{- end }}
      {{- end }}
      containers:
      - name: "message-gateway"
        image: "{{ .Values.messagegateway.image }}:{{ .Values.messagegateway.imageTag }}"
        imagePullPolicy: "{{ .Values.messagegateway.imagePullPolicy }}"
        ports:
          - containerPort: 5000        
        resources:
            limits:
              memory: "{{ .Values.messagegateway.limits.memory }}"
              cpu: "{{ .Values.messagegateway.limits.cpu }}"
            requests:
              memory: "{{ .Values.messagegateway.requests.memory }}"
              cpu: "{{ .Values.messagegateway.requests.cpu }}"
        args:
          - "-e"
          - "-E"
          - "http.enabled=true"
        livenessProbe:
{{ toYaml .Values.messagegateway.livenessProbe | indent 10 }}
        readinessProbe:
{{ toYaml .Values.messagegateway.readinessProbe | indent 10 }}        
        env:
        - name: "SPRING_DATASOURCE_URL"
          value: "{{ .Values.messagegateway.DATASOURCE_URL }}"
        - name: "MYSQL_USERNAME"
          value: "{{ .Values.messagegateway.MYSQL_USERNAME }}"
        - name: "MYSQL_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "messagegateway-secret"
              key: "database-password"
        - name: "CALLBACKCONFIG_HOST"
          value: "{{ .Values.messagegateway.CALLBACKCONFIG_HOST }}"
        - name: "HOSTCONFIG_HOST"
          value: "{{ .Values.messagegateway.HOSTCONFIG_HOST }}"
        - name: "PROVIDERSOURCE_FROMDATABASE"
          value: "{{ .Values.messagegateway.PROVIDERSOURCE_FROMDATABASE }}"
        - name: "PROVIDERSOURCE_FROMYML"
          value: "{{ .Values.messagegateway.PROVIDERSOURCE_FROMYML }}"
        - name: "LOGGING_LEVEL_ROOT"
          value: "{{ .Values.messagegateway.LOGGING_LEVEL_ROOT }}"
        - name: "PROVIDERKEYS_TELERIVETAPIKEY"
          valueFrom:
            secretKeyRef:
              name: "messagegateway-secret"
              key: "api-key"
        - name: "PROVIDERKEYS_TELERIVETPROJECTID"
          valueFrom:
            secretKeyRef:
              name: "messagegateway-secret"
              key: "project-id"
{{- if .Values.messagegateway.extraEnvs | default .Values.messagegateway.deployment.extraEnvs }}
{{ toYaml ( .Values.messagegateway.extraEnvs | default .Values.messagegateway.deployment.extraEnvs ) | indent 8 }}
{{- end }}
        envFrom: {{ toYaml ( .Values.messagegateway.envFrom | default .Values.messagegateway.deployment.envFrom ) | nindent 10 }}
        securityContext: {{ toYaml ( .Values.messagegateway.podSecurityContext | default .Values.messagegateway.deployment.securityContext ) | nindent 10 }}
        volumeMounts:
        {{- range .Values.secretMounts | default .Values.messagegateway.deployment.secretMounts }}
        - name: {{ .name }}
          mountPath: {{ .path }}
          {{- if .subPath }}
          subPath: {{ .subPath }}
          {{- end }}
        {{- end }}
        {{- range $path, $config := .Values.message-gatewayConfig }}
        - name: message-gateway-config
          mountPath: /usr/share/message-gateway/{{ $path }}
          readOnly: true
          subPath: {{ $path }}
        {{ else }}
        {{- range $path, $config := .Values.messagegateway.deployment.message-gatewayConfig }}
        - name: message-gateway-config
          mountPath: /usr/share/message-gateway/{{ $path }}
          readOnly: true
          subPath: {{ $path }}
        {{- end }}
        {{- end }}
        {{- if .Values.messagegateway.extraVolumeMounts | default .Values.messagegateway.deployment.extraVolumeMounts }}
{{ toYaml ( .Values.messagegateway.extraVolumeMounts | default .Values.messagegateway.deployment.extraVolumeMounts ) | indent 8 }}
        {{- end }}
      {{- if .Values.messagegateway.extraContainers }}
{{ tpl .Values.messagegateway.extraContainers . | indent 6 }}
      {{- end }}
{{- end }}