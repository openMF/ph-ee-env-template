{{- if .Values.enabled -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ph-ee-connector-ams-mifos
  labels:
    app: ph-ee-connector-ams-mifos
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: ph-ee-connector-ams-mifos
  template:
    metadata:
      labels:
        app: ph-ee-connector-ams-mifos
      annotations:
{{- if .Values.deployment.annotations }}
{{ toYaml .Values.deployment.annotations | indent 8 }}
{{- end }}
    spec: 
      affinity: {{ toYaml .Values.deployment.affinity | nindent 8 }}
      nodeSelector: {{ toYaml .Values.deployment.nodeSelector | nindent 8 }}
      tolerations: {{ toYaml ( .Values.tolerations | default .Values.deployment.tolerations ) | nindent 8 }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName  }}
      {{- end }}
      serviceAccountName: ph-ee-connector-ams-mifos
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriod }}  
      containers:
      - name: ph-ee-connector-ams-mifos
        image: "{{ .Values.image }}:{{ .Values.imageTag }}"
        imagePullPolicy: "{{ .Values.imagePullPolicy }}"
        ports:
          - containerPort: 5000
        resources: {{ toYaml ( .Values.resources | default .Values.deployment.resources ) | nindent 10 }}
    {{- if .Values.imagePullSecrets }}
        imagePullSecrets:
  {{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}  
        env:
        - name: "SPRING_PROFILES_ACTIVE"
          value: "{{ .Values.SPRING_PROFILES_ACTIVE }}"
        - name: "ams_local_enabled"
          value: "{{ .Values.ams_local_enabled }}"
        - name: "ams_local_interop_host"
          value: "{{ .Values.ams_local_interop_host }}"
        - name: "ams_local_customer_host"
          value: "{{ .Values.ams_local_customer_host }}"
        - name: "ams_local_account_host"
          value: "{{ .Values.ams_local_account_host }}"
        - name: "ams_local_auth_host"
          value: "{{ .Values.ams_local_auth_host }}"
        - name: "ams_local_loan_host"
          value: "{{ .Values.ams_local_loan_host }}"
        - name: "dfspids"
          value: "{{ .Values.dfspids }}"
{{- if .Values.extraEnvs | default .Values.deployment.extraEnvs }}
{{ toYaml ( .Values.extraEnvs | default .Values.deployment.extraEnvs ) | indent 8 }}
{{- end }}        
        envFrom: {{ toYaml ( .Values.envFrom | default .Values.deployment.envFrom ) | nindent 10 }}
        securityContext: {{ toYaml ( .Values.podSecurityContext | default .Values.deployment.securityContext ) | nindent 10 }}  

        volumeMounts:
        - name: ph-ee-config
          mountPath: "/config"
      volumes:
      - name: ph-ee-config
        configMap:
          name: ph-ee-config

        volumeMounts:
        - name: ph-ee-config
          mountPath: "/config"
# {{- if .Values.deployment.config }}
# {{ toYaml .Values.deployment.config | indent 12 }}
# {{- end }}            
      initContainers:
      - name: wait-db
        image: jwilder/dockerize
        imagePullPolicy: IfNotPresent
        args:
        - -timeout=120s
        - -wait
        - tcp://{{ .Values.operations_app.datasource.host }}:3306         
      volumes:
      - name: ph-ee-config
        configMap:
          name: ph-ee-config
        {{- if .Values.extraContainers }}
  {{ tpl .Values.extraContainers . | indent 6 }}
        {{- end }}

{{- end }}