zeebe:
    broker:
      contactpoint: "zeebe-zeebe-gateway:26500"
      

zeebe-cluster-helm:
  global:
    zeebe: "zeebe-zeebe"
    elasticsearch:
      host: "ph-ee-elasticsearch"
  annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/port: '9600'
      prometheus.io/path: '/metrics'    


  image:
    repository: camunda/zeebe
    tag: 1.1.0

  clusterSize: "1"
  partitionCount: "1"
  replicationFactor: "1"
  cpuThreadCount: "2"
  ioThreadCount: "2"
  pvcSize: "10Gi"
  pvcAccessModes: [ "ReadWriteOnce" ]

  resources:
    requests:
      cpu: 100m

  env:
#    - name: ZEEBE_BROKER_BACKPRESSURE_ENABLED
#      value: "false"
    - name: ZEEBE_BROKER_EXECUTION_METRICS_EXPORTER_ENABLED
      value: "true"
    - name: ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_CLASSNAME
      value: "hu.dpc.rt.kafkastreamer.exporter.NoOpExporter"
    - name: ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_JARPATH
      value: "/exporters/ph-ee-kafka-exporter.jar"
    - name: ZEEBE_BROKER_EXPORTERS_KAFKA_JARPATH
      value: "/exporters/ph-ee-kafka-exporter.jar"
    - name: ZEEBE_BROKER_EXPORTERS_KAFKA_CLASSNAME
      value: "hu.dpc.rt.kafkastreamer.exporter.KafkaExporter"
    - name: ZEEBE_BROKER_BACKPRESSURE_VEGAS_INITIALLIMIT
      value: "1000"
    - name: ZEEBE_BROKER_BACKPRESSURE_VEGAS_ALPHA
      value: "2"
    - name: ZEEBE_BROKER_BACKPRESSURE_VEGAS_BETA
      value: "8"
    - name: ZEEBE_BROKER_EXPORTERS_KAFKA_ARGS_INDEX_EVENT
      value: 'true'
    - name: ZEEBE_BROKER_EXPORTERS_KAFKA_ARGS_INDEX_VARIABLE
      value: 'true'
    - name: ZEEBE_BROKER_EXPORTERS_KAFKA_ARGS_INDEX_PROCESSINSTANCE
      value: 'true'
    - name: ZEEBE_BROKER_EXPORTERS_KAFKA_ARGS_INDEX_PROCESS
      value: 'true'
    - name: ZEEBE_BROKER_EXPORTERS_KAFKA_ARGS_INDEX_INCIDENT
      value: 'true'
    - name: ZEEBE_BROKER_EXPORTERS_KAFKA_ARGS_INDEX_DEPLOYMENT
      value: 'false'
    - name: ZEEBE_BROKER_EXPORTERS_KAFKA_ARGS_INDEX_ERROR
      value: 'false'
    - name: ZEEBE_BROKER_EXPORTERS_KAFKA_ARGS_INDEX_JOB
      value: 'false'
    - name: ZEEBE_BROKER_EXPORTERS_KAFKA_ARGS_INDEX_VARIABLEDOCUMENT
      value: 'false'
    - name: ZEEBE_BROKER_EXPORTERS_KAFKA_ARGS_INDEX_WORKFLOWINSTANCE
      value: 'false'
    - name: ZEEBE_BROKER_EXPORTERS_KAFKA_ARGS_INDEX_CREATETEMPLATE
      value: 'false'


  gateway:
    replicas: 1
    logLevel: warn
    env:
      - name: ZEEBE_GATEWAY_THREADS_MANAGEMENTTHREADS
        value: "4"
      - name: ZEEBE_GATEWAY_MONITORING_ENABLED
        value: "true"

  # zeebe's dependencies
  elasticsearch:
    enabled: false
    fullnameOverride: "zeebe-elasticsearch"
    clusterName: "zeebe-elasticsearch"

  kibana:
    enabled: false
    fullnameOverride: "zeebee-kibana"
    elasticsearchHosts: "http://zeebe-elasticsearch:9200/"

  prometheus:
    enabled: false

  extraInitContainers: |
    - name: init-ph-ee-kafka-exporter
      image: busybox:1.28
      command: ['/bin/sh', '-c']
      args: ['wget -O /exporters/ph-ee-kafka-exporter.jar "https://fynarfin.io/images/exporter-1.1.0-SNAPSHOT.jar"; ls -al /exporters/']
      volumeMounts:
      - name: exporters
        mountPath: /exporters/

# payment hub Operate, ES and Kibana
zeebe-operate-helm:
  enabled: false
  image:
    repository: camunda/operate
    tag: 1.1.0
  fullnameOverride: "zeebe-operate"
  global:
    zeebe: "zeebe-zeebe"
    elasticsearch:
      host: "zeebe-elasticsearch"
      clusterName: "zeebe-elasticsearch"

elasticsearch:
  enabled: true
  imageTag: 7.16.3
  replicas: 1
  protocol: http
  fullnameOverride: "ph-ee-elasticsearch"
  clusterName: "ph-ee-elasticsearch"
  minimumMasterNodes: 1
  esConfig:
    elasticsearch.yml: |
      xpack.security.enabled: false
      xpack.security.transport.ssl.enabled: false
      xpack.security.transport.ssl.verification_mode: certificate
      xpack.security.transport.ssl.keystore.path: /usr/share/elasticsearch/config/certs/elastic-certificates.p12
      xpack.security.transport.ssl.truststore.path: /usr/share/elasticsearch/config/certs/elastic-certificates.p12
      xpack.security.http.ssl.enabled: false
      xpack.security.http.ssl.truststore.path: /usr/share/elasticsearch/config/certs/elastic-certificates.p12
      xpack.security.http.ssl.keystore.path: /usr/share/elasticsearch/config/certs/elastic-certificates.p12
  secretMounts:
    - name: elastic-certificates
      secretName: elastic-certificates
      path: /usr/share/elasticsearch/config/certs
  extraEnvs:
    - name: ELASTIC_PASSWORD
      valueFrom:
        secretKeyRef:
          name: elastic-credentials
          key: password


kibana:
  enabled: true
  imageTag: 7.16.3
  fullnameOverride: "ph-ee-kibana"
  elasticsearchHosts: "http://ph-ee-elasticsearch:9200/"
  protocol: http
  kibanaConfig:
    kibana.yml: |
      monitoring.enabled: false
      xpack.encryptedSavedObjects.encryptionKey: 5f4dcc3b5aa765d61d8327deb882cf99
      server.ssl:
        enabled: false
        key: /usr/share/kibana/config/certs/elastic-certificate.pem
        certificate: /usr/share/kibana/config/certs/elastic-certificate.pem
      xpack.security.encryptionKey: ${KIBANA_ENCRYPTION_KEY}
      elasticsearch.ssl:
        certificateAuthorities: /usr/share/kibana/config/certs/elastic-certificate.pem
        verificationMode: certificate
  secretMounts:
    - name: elastic-certificate-pem
      secretName: elastic-certificate-pem
      path: /usr/share/kibana/config/certs
  extraEnvs:
    - name: 'ELASTICSEARCH_USERNAME'
      valueFrom:
        secretKeyRef:
          name: elastic-credentials
          key: username
    - name: 'ELASTICSEARCH_PASSWORD'
      valueFrom:
        secretKeyRef:
          name: elastic-credentials
          key: password
    - name: 'KIBANA_ENCRYPTION_KEY'
      valueFrom:
        secretKeyRef:
          name: kibana
          key: encryptionkey


channel:
  enabled: true
  replicas: 1
  image: ""
  imageTag: "v1.3.0"
  imagePullPolicy: "Always"
  SPRING_PROFILES_ACTIVE: ""
  LOGGING_LEVEL_ROOT: "INFO"
  LOGGING_PATTERN_CONSOLE: "%d{dd-MM-yyyy HH:mm:ss.SSS} %magenta([%thread]) %highlight(%-5level) %logger.%M - %msg%n"
  TRANSACTION_ID_LENGTH: 20
  gsma_payee_tenant: ""
  DFSPIDS: ""
  hostname: ""
  stub_hostname: ""
  limits:
    memory: "768M"
    cpu: "500m"
  requests:
    memory: "768M"
    cpu: "100m"
  paygops:
    host: ""
  roster:
    host: ""
  ingress:
    enabled: true
    path: "/channel"
    annotations: {}
    backend: {}
    stub_backend: {}
  deployment:
    annotations: {}

operations:
  enabled: true
  mysql:
    enabled: true

ingress:
  apiversion: "networking.k8s.io/v1"

deployment:
  apiversion: "apps/v1"

service:
  apiversion: "v1"

secret:
  apiversion: "v1"

configmap:
  apiversion: "v1"

operationsmysql:
  fullnameOverride: "operationsmysql"
  image:
      tag: "5.7"
      debug: false
  auth:
      database: "tenants"
      username: "mifos"
      password: "password"
      rootPassword: "4ET6ywqlGt"
  initdbScripts:
      setup.sql: |-
        CREATE DATABASE IF NOT EXISTS phdefault;
        CREATE DATABASE IF NOT EXISTS messagegateway;
        GRANT ALL ON *.* TO 'root'@'%';
        GRANT ALL PRIVILEGES ON messagegateway.* TO 'mifos';
        GRANT ALL PRIVILEGES ON phdefault.* TO 'mifos';

ph_ee_connector_ams_mifos:
  enabled: false
  replicas: 1
  image: ""
  imageTag: "v1.2.0"
  imagePullPolicy: "Always"
  SPRING_PROFILES_ACTIVE: ""
  ams_local_enabled: false
  ams_local_interop_host: ""
  ams_local_account_host: ""
  ams_local_customer_host: ""
  ams_local_auth_host: ""
  limits:
    memory: "512M"
    cpu: "500m"
  requests:
    memory: "512M"
    cpu: "100m"
  deployment:
    annotations: {}

ph_ee_connector_mojaloop:
  enabled: false
  replicas: 1
  image: ""
  imageTag: "v1.0.0"
  imagePullPolicy: "Always"
  SPRING_PROFILES_ACTIVE: ""
  limits:
    memory: "512M"
    cpu: "500m"
  requests:
    memory: "512M"
    cpu: "100m"
  ingress:
    enabled: true
    path: "/"
    annotations: {}
    backend: {}
  deployment:
    annotations: {}

operations_app:
  enabled: true
  replicas: 1
  image: ""
  imageTag: "v1.3.0"
  imagePullPolicy: "Always"
  SPRING_PROFILES_ACTIVE: ""
  LOGGING_LEVEL_ROOT: "INFO"
  LOGGING_PATTERN_CONSOLE: "%d{dd-MM-yyyy HH:mm:ss.SSS} %magenta([%thread]) %highlight(%-5level) %logger.%M - %msg%n"
  hostname: ""
  tenants: ""
  token_client_channel_secret: ""
  datasource:
      username: "mifos"
      password: "password"
      host: "operationsmysql"
      port: 3306
      schema: "tenants"
  limits:
    memory: "512M"
    cpu: "500m"
  requests:
    memory: "512M"
    cpu: "100m"
  ingress:
    enabled: false
    path: "/opsapp"
    annotations: {}
    backend: {}
  deployment:
    annotations: {}

operations_web:
  enabled: true
  replicas: 1
  image: ""
  imageTag: "v1.3.1"
  imagePullPolicy: "Always"
  hostname: ""
  webhost: ""
  limits:
    memory: "512M"
    cpu: "500m"
  requests:
    memory: "512M"
    cpu: "100m"
  ingress:
    enabled: false
    path: "/"
    annotations:
      konghq.com/plugins: request-transformer,oidc
      kubernetes.io/ingress.class: kong
    backend: {}
  deployment:
    annotations: {}
    config:
      - name: ph-ee-operations-web-config
        mountPath: "/usr/share/nginx/html/assets/configuration.properties"
        subPath: "configuration.properties"

identity:
  hostname: ""

mpesa:
  enabled: false
  replicas: 1
  image: ""
  imageTag: "v1.3.0"
  imagePullPolicy: "Always"
  SPRING_PROFILES_ACTIVE: ""
  LOGGING_LEVEL_ROOT: "INFO"
  hostname: ""
  zeebe_broker_contactpoint: "zeebe-zeebe-gateway:26500"
  zeebe_init_transfer_wait_timer: 10
  tenant: ""
  callback_host: ""
  channel:
    host: ""
  paygops:
    host: ""
  roster:
    host: ""
  accounts:
    default:
      name: "default"
      business_short_code: "7385028"
      till: "1234567"
      auth_host: "https://sandbox.safaricom.co.ke/oauth/v1/generate"
      api_host: "https://sandbox.safaricom.co.ke"
      client_key: "0pLxbN83FrOl5Nd0Fh9Zi5BQlMxSL2n5"
      client_secret: "YzuGNoJxeub8ZC6d"
      pass_key: "bfb279f9aa9bdbcf158e97dd71a467cd2e0c893059b10f78e6b72ada1ed2c919"
    roster:
      name: "roster"
      business_short_code: "7385028"
      till: "1234567"
      auth_host: "https://sandbox.safaricom.co.ke/oauth/v1/generate"
      api_host: "https://sandbox.safaricom.co.ke"
      client_key: "0pLxbN83FrOl5Nd0Fh9Zi5BQlMxSL2n5"
      client_secret: "YzuGNoJxeub8ZC6d"
      pass_key: "bfb279f9aa9bdbcf158e97dd71a467cd2e0c893059b10f78e6b72ada1ed2c919"
    paygops:
      name: "paygops"
      business_short_code: "174379"
      till: "9347335"
      auth_host: "https://sandbox.safaricom.co.ke/oauth/v1/generate"
      api_host: "https://sandbox.safaricom.co.ke"
      client_key: "0pLxbN83FrOl5Nd0Fh9Zi5BQlMxSL2n5"
      client_secret: "YzuGNoJxeub8ZC6d"
      pass_key: "bfb279f9aa9bdbcf158e97dd71a467cd2e0c893059b10f78e6b72ada1ed2c919"
  limits:
    memory: "512M"
    cpu: "500m"
  requests:
    memory: "512M"
    cpu: "100m"
  ingress:
    enabled: false
    path: "/mpesa"
    annotations: {}
    backend: {}
  deployment:
    annotations: {}

roster_connector:
  enabled: false
  replicas: 1
  image: ""
  imageTag: "v1.1.0"
  imagePullPolicy: "Always"
  LOGGING_LEVEL_ROOT: "INFO"
  SPRING_PROFILES_ACTIVE: ""
  containerPort: 5000
  limits:
    memory: "512M"
    cpu: "500m"
  requests:
    memory: "512M"
    cpu: "100m"
  ams:
    local:
      enabled: ""
  pesacore:
    auth_header: ""
  deployment:
    annotations: {}

paygops_connector:
  enabled: false
  replicas: 1
  image: ""
  imageTag: "v1.3.0"
  imagePullPolicy: "Always"
  SPRING_PROFILES_ACTIVE: ""
  LOGGING_LEVEL_ROOT: "INFO"
  containerPort: 5000
  limits:
    memory: "512M"
    cpu: "500m"
  requests:
    memory: "256M"
    cpu: "50m"
  ams:
    local:
      enabled: ""
  paygops:
    authheader: ""
  deployment:
    annotations: {}

messagegateway:
  enabled: false
  replicas: 1
  image: ""
  imageTag: "v1.0.0"
  imagePullPolicy: "Always"
  LOGGING_LEVEL_ROOT: "INFO"
  hostname: ""
  CALLBACKCONFIG_HOST: "ph-ee-connector-notifications"
  HOSTCONFIG_HOST: "message-gateway"
  MYSQL_USERNAME: "mifos"
  MYSQL_PASSWORD: "password"
  DATASOURCE_URL: jdbc:mysql:thin://operationsmysql:3306/messagegateway
  PROVIDERSOURCE_FROMDATABASE: "disabled"
  PROVIDERSOURCE_FROMYML: "enabled"
  limits:
    memory: "512M"
    cpu: "500m"
  requests:
    memory: "512M"
    cpu: "100m"
  ingress:
    enabled: false
    path: "/messages"
    annotations: {}
    backend: {}
  secret:
    name: ""
    key:
      telerivet_api_key: ""
  deployment:
    annotations: {}

notifications:
  enabled: false
  replicas: 1
  image: ""
  imageTag: "v1.0.2"
  imagePullPolicy: "Always"
  SPRING_PROFILES_ACTIVE: ""
  LOGGING_LEVEL_ROOT: "INFO"
  hostname: ""
  zeebe_broker_contactpoint: "zeebe-zeebe-gateway:26500"
  MESSAGEGATEWAYCONFIG_HOST: "message-gateway"
  NOTIFICATION_LOCAL_HOST: "ph-ee-connector-notifications"
  NOTIFICATION_SUCCESS_ENABLED: "false"
  NOTIFICATION_FAILURE_ENABLED: "true"
  hostconfig:
    host: ""
    port: ""
  limits:
    memory: "512M"
    cpu: "500m"
  requests:
    memory: "512M"
    cpu: "100m"
  ingress:
    enabled: false
    path: "/notifications"
    annotations: {}
    backend: {}
  deployment:
    annotations: {}

zeebe_ops:
  enabled: true
  replicas: 1
  image: ""
  imageTag: "v1.0.1"
  imagePullPolicy: "Always"
  SPRING_PROFILES_ACTIVE: ""
  LOGGING_LEVEL_ROOT: "INFO"
  hostname: ""
  zeebe_broker_contactpoint: "zeebe-zeebe-gateway:26500"
  elasticsearch_contactpoint: "ph-ee-elasticsearch:9200"
  elasticsearch_url: "http://ph-ee-elasticsearch:9200/"
  elasticsearch_sslverification: false
  elasticsearch_security_enabled: false
  tenants: ""
  limits:
    memory: "512M"
    cpu: "500m"
  requests:
    memory: "512M"
    cpu: "100m"
  ingress:
    enabled: false
    path: "/zeebeops"
    annotations: {}
    backend: {}
  deployment:
    annotations: {}

importer_es:
  enabled: true
  replicas: 1
  image: ""
  imageTag: "v1.3.0"
  imagePullPolicy: "Always"
  importer_elasticsearch_url: "http://ph-ee-elasticsearch:9200/"
  reporting:
    enabled: false
    fields:
      amount: false
      accountId: false
      errorCode: false
      errorDescription: false
      externalId: false
      initiator: false
      initiatorType: false
      isNotificationsFailureEnabled: false
      isNotificationsSuccessEnabled: false
      mpesaTransactionId: false
      mpesaTransactionStatusRetryCount: false
      originDate: false
      partyLookupFailed: false
      phoneNumber: false
      processDefinitionKey: false
      processInstanceKey: false
      scenario: false
      tenantId: false
      timer: false
      timestamp: false
      transactionFailed: false
      transactionId: false
      transferCreateFailed: false
      transferSettlementFailed: false
      transferResponseCREATE: false
  elasticsearch_sslverification: false
  elasticsearch_security_enabled: false
  logging:
    level:
      root: "INFO"
    pattern:
      console: "%d{dd-MM-yyyy HH:mm:ss.SSS} %magenta([%thread]) %highlight(%-5level) %logger.%M - %msg%n"
  limits:
    memory: "512M"
    cpu: "500m"
  requests:
    memory: "512M"
    cpu: "100m"
    javaToolOptions: "-Xmx256M"

kafka:
  enabled: true
  replicas: 1
  image: "spotify/kafka"
  imagePullPolicy: "Always"
  advertised:
      host: "kafka"
      port: "9092"
  limits:
    memory: "512M"
    cpu: "500m"
  requests:
    memory: "512M"
    cpu: "100m"
  deployment:
      annotations:
        deployTime: "{{ .Values.deployTime }}"

importer_rdbms:
  enabled: true
  replicas: 1
  image: ""
  imageTag: "v1.2.0"
  imagePullPolicy: "Always"
  LOGGING_LEVEL_ROOT: "INFO"
  LOGGING_PATTERN_CONSOLE: "%d{dd-MM-yyyy HH:mm:ss.SSS} %magenta([%thread]) %highlight(%-5level) %logger.%M - %msg%n"
  datasource:
      username: "mifos"
      password: "password"
      host: "operationsmysql"
      port: 3306
      schema: "tenants"
  limits:
    memory: "512M"
    cpu: "500m"
  requests:
    memory: "512M"
    cpu: "100m"
  deployment:
    annotations: {}
  javaToolOptions: "-Xmx256M"

connector_bulk:
  enabled: false
  replicas: 1
  image: ""
  imageTag: "v1.3.0"
  imagePullPolicy: "Always"
  SPRING_PROFILES_ACTIVE: "default"
  camel_disable_ssl: true
  hostname: "bulk-connector.sandbox.fynarfin.io"
  zeebe_broker_contactpoint: "zeebe-zeebe-gateway:26500"
  tenants: "ibank-usa,ibank-india"
  bucket_name: "paymenthub-ee-dev"
  operations_app:
      contactpoint: "https://ops-bk.sandbox.fynarfin.io/"
      endpoints:
        batch_transaction: "/api/v1/batch/transactions"
  config:
    partylookup:
      enable: false
    approval:
      enable: false
    ordering:
      enable: false
      field: ""
    splitting:
      enable: true
      sub_batch_size: 5
    formatting:
      enable: false
      standard: "DEFAULT"
    mergeback:
      enable: true
    backpressure:
      enable: false
    success_threshold_check:
      enable: true
      success_rate: 95
  aws:
    region: "us-east-2"
    access_key: "AKIAX32JM37TZOJ5AKFB"
    secret_key: "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"
  limits:
    memory: "990M"
    cpu: "512m"
  requests:
    memory: "512M"
    cpu: "100m"
  deployment:
    annotations: {}

ph_ee_connector_gsma:
  enabled: false
  replicas: 1
  image: ""
  imageTag: "v1.0.0"
  imagePullPolicy: "Always"
  SPRING_PROFILES_ACTIVE: ""
  limits:
    memory: "512M"
    cpu: "500m"
  requests:
    memory: "512M"
    cpu: "100m"
  deployment:
    annotations: {}

ph_ee_connector_slcb:
  enabled: false
  replicas: 1
  image: ""
  imageTag: "v1.1.1"
  imagePullPolicy: "Always"
  SPRING_PROFILES_ACTIVE: ""
  zeebe_broker_contactpoint: "zeebe-zeebe-gateway:26500"
  username: "username"
  password: "password"
  signature_key: "long_segnature_key"
  auth_host: "https://g2p-test.slcb.com:8443"
  api_host: "https://g2p-test.slcb.com:8443"
  account_number: "003001003879112168"
  account_type: 0
  institutioncode: "SLCB"
  endpoint:
    auth: "/api/auth"
    transaction_request: "/api/transactionRequest"
    reconciliation: "/reconciliation"
    account_balance: "/accountBalance"
  config:
    date_format: "yyyy-MM-dd'T'hh:mm:ssXXX"
    reconciliation:
      enable: false
  aws:
    bucket_name: "paymenthub-ee-dev"
    region: "us-east-2"
    access_key: "access-key"
    secret_key: "secret-key"
  limits:
    memory: "512M"
    cpu: "500m"
  requests:
    memory: "512M"
    cpu: "100m"
  deployment:
    annotations: {}

mock_oracle:
  enabled: false
  replicas: 1
  image: ""
  imagePullPolicy: "Always"
  hostname: ""
  service:
    targetport: 4100
  limits:
    memory: "512M"
    cpu: "500m"
  requests:
    memory: "512M"
    cpu: "100m"
  ingress:
    enabled: true
    path: "/"
    annotations: {}
    backend: {}
  deployment:
    annotations: {}


wildcardhostname: ""

tls: ""

kong:
  enabled: false
  image:
    repository: revomatico/docker-kong-oidc
    tag: "latest"
  env:
    plugins: "bundled,oidc"
  admin:
    enabled: true
    http:
      enabled: true
    tls:
      enabled: false
    ingress:
      enabled: true
      ingressClassName: "kong"
      hostname: kong-admin.mifos.io
  extraObjects:
    - apiVersion: configuration.konghq.com/v1
      kind: KongClusterPlugin
      metadata:
        name: request-transformer
        annotations:
          kubernetes.io/ingress.class: "kong"
        labels:
          global: "false"
      disabled: false # optionally disable the plugin in Kong
      plugin: request-transformer
      config:
        remove:
          headers:
          - cookie
          - x-id-token
    - apiVersion: configuration.konghq.com/v1
      kind: KongClusterPlugin
      metadata:
        name: cors
        annotations:
          kubernetes.io/ingress.class: "kong"
        labels:
          global: "true"    
      disabled: false # optionally disable the plugin in Kong
      plugin: cors
      config: 
        origins: 
          - "*"
        credentials: true
        max_age: 3600
        exposed_headers : 
          - "X-Auth-Token"
        preflight_continue: false
    - apiVersion: configuration.konghq.com/v1
      kind: KongClusterPlugin
      metadata:
        name: oidc
        annotations:
          kubernetes.io/ingress.class: "kong"
        labels:
          global: "false"
      disabled: false # optionally disable the plugin in Kong
      plugin: oidc
      config: # configuration for the plugin
        client_id: kong-oidc 
        client_secret: xxxxxxxx  # Generated on keyCloak
        realm: kong
        discovery: https://keycloak.localhost/auth/realms/kong-oidc/.well-known/openid-configuration
        scope: openid

keycloak:
  enabled: false
  ingress:
    enabled: false
    ingressClassName: "kong"
    rules:
      - host: 'keycloak.mifos.io'
    tls: []
  extraVolumes: |
    - name: realm-secret
      secret:
        secretName: realm-secret
  extraVolumeMounts: |
    - name: realm-secret
      mountPath: "/realm/"
      readOnly: true
  extraEnv: |
    - name: KEYCLOAK_IMPORT
      value: /realm/kong-keycloak-realm.json
