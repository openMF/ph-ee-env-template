{{- if .Values.enabled -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ph-ee-vouchers
  labels:
    app: ph-ee-vouchers
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: ph-ee-vouchers
  template:
    metadata:
      labels:
        app: ph-ee-vouchers
      annotations:
{{- if .Values.deployment.annotations }}
{{ toYaml .Values.deployment.annotations | indent 8 }}
{{- end }}
    spec:
      containers:
        - name: ph-ee-vouchers
          image: "{{ .Values.image }}"
          ports:
            - containerPort: 8080
          imagePullPolicy: "{{ .Values.global.imagePullPolicy }}"
          resources:
            limits:
              memory: "{{ .Values.limits.memory }}"
              cpu: "{{ .Values.limits.cpu }}"
            requests:
              memory: "{{ .Values.requests.memory }}"
              cpu: "{{ .Values.requests.cpu }}"

          env:
            - name: "SPRING_PROFILES_ACTIVE"
              value: "{{ .Values.global.SPRING_PROFILES_ACTIVE }}"
            - name: "ZEEBE_BROKER_CONTACTPOINT"
              value: "{{ .Release.Name }}-zeebe-gateway:26500"
            - name: "PAYER_TENANT"
              value: "{{ .Values.payer.tenant }}"
            - name: "PAYER_IDENTIFIER"
              value: "{{ .Values.payer.identifier }}"
            - name: "PAYER_IDENTIFIER_TYPE"
              value: "{{ .Values.payer.identifierType }}"
            - name: "VOUCHER_HOSTNAME"
              value: "{{ .Values.voucher.hostname }}"
            - name: "OPERATIONS_HOSTNAME"
              value: "{{ .Values.operations.hostname }}"
            - name: "OPERATIONS_TRANSFERS_ENDPOINT"
              value: "{{ .Values.operations.endpoints.transfers }}"
            - name: "SPRING_DATASOURCE_URL"
              value: "{{ .Values.spring.datasource.url }}"
            - name: "SPRING_DATASOURCE_USERNAME"
              value: "{{ .Values.spring.datasource.username }}"
            - name: "SPRING_DATASOURCE_PASSWORD"
              value: "{{ .Values.spring.datasource.password }}"
            - name: "ASYNC_CORE_POOL_SIZE"
              value: "{{ .Values.async.core_pool_size }}"
            - name: "ASYNC_MAX_POOL_SIZE"
              value: "{{ .Values.async.max_pool_size }}"
            - name: "ASYNC_QUEUE_CAPACITY"
              value: "{{ .Values.async.queue_capacity }}"
            - name: "EXPIRY_TIME"
              value: "{{ .Values.expiry_time }}"
            - name: "SALTING_ENABLED"
              value: "{{ .Values.salting.enabled }}"
            - name: "LOGGING_LEVEL_ROOT"
              value: "{{ .Values.global.LOGGING_LEVEL_ROOT }}"

{{- if .Values.extraEnvs | default .Values.deployment.extraEnvs }}
{{ toYaml ( .Values.extraEnvs | default .Values.deployment.extraEnvs ) | indent 10 }}
{{- end }}        
          envFrom: {{ toYaml ( .Values.envFrom | default .Values.deployment.envFrom ) | nindent 12 }}
          securityContext: {{ toYaml ( .Values.podSecurityContext | default .Values.deployment.securityContext ) | nindent 12 }}
          volumeMounts:
            - name: ph-ee-config
              mountPath: "/config"
      volumes:
        - name: ph-ee-config
          configMap:
            name: ph-ee-config
{{- end }}