deployment:
  apiVersion: "apps/v1"

ingress:
  enabled: true
  apiVersion: networking.k8s.io/v1

service:
  apiVersion: "v1"

secret:
  apiVersion: "v1"

configmap:
  apiVersion: "v1"

zeebe:
  broker:
    contactpoint: "zeebe-zeebe-gateway:26500"
zeebe-cluster-helm:
  enabled: true
  global:
    elasticsearch:
      host: "ph-ee-elasticsearch"
  image:
    repository: camunda/zeebe
    tag: 1.1.0

  clusterSize: "1"
  partitionCount: "1"
  replicationFactor: "1"
  JavaOpts: "-Xms8g -Xmx8g -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:MaxRAMPercentage=25.0 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -XX:+PrintFlagsFinal"

  elasticsearch:
    enabled: false
  kibana:
    enabled: false

  extraInitContainers: |
    - name: init-ph-ee-kafka-exporter
      image: busybox:1.28
      command: ['/bin/sh', '-c']
      args: ['wget -O /exporters/ph-ee-kafka-exporter.jar "https://paymenthub-ee-dev.s3.us-east-2.amazonaws.com/jars/exporter-1.0.0-SNAPSHOT.jar"; ls -al /exporters/']
      volumeMounts:
      - name: exporters
        mountPath: /exporters/

zeebe-operate-helm:
  enabled: true
  image:
    repository: camunda/operate
    tag: 1.1.0
  global:
    elasticsearch:
      host: "ph-ee-elasticsearch"
      clusterName: "ph-ee-elasticsearch"
  ingress:
    enabled: false
    annotations:
      kubernetes.io/ingress.class: nginx
    path: /
    host: operate.sandbox.mifos.io
    tls:
      enabled: true

elasticsearch:
  enabled: true

  #Single Node Solution
  clusterHealthCheckParams: "wait_for_status=yellow&timeout=100s"
  protocol: http
  master:
    readinessProbe:
      httpGet:
        allow-insecure: true
        username: elastic
        password: "{{ .Env.ELASTIC_PASSWORD }}"
        path: /_cluster/health?wait_for_status=yellow&timeout=5s
        port: 9200
      initialDelaySeconds: 30
  data:
    readinessProbe:
      httpGet:
        allow-insecure: true
        username: elastic
        password: "{{ .Env.ELASTIC_PASSWORD }}"
        path: /_cluster/health?wait_for_status=yellow&timeout=5s
        port: 9200
      initialDelaySeconds: 30
  # Shrink default JVM heap.
  esJavaOpts: "-Xmx512m -Xms512m"

  # Allocate smaller chunks of memory per pod.
  resources:
    requests:
      cpu: "100m"
      memory: "1024M"
    limits:
      cpu: "1000m"
      memory: "1024M"
  volumeClaimTemplate:
    accessModes: [ "ReadWriteOnce" ]
    storageClassName: "gp2"
    resources:
      requests:
        storage: 10Gi

kibana:
  enabled: true
  readinessProbe:
    initialDelaySeconds: 45
    timeoutSeconds: 15
    successThreshold: 1
  protocol: http
  ingress:
    enabled: true
    className: "nginx"
    pathtype: "Prefix"
    annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: analytics.sandbox.mifos.io
        paths:
          - path: /
    #tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

operations:
  enabled: true

idmappermysql:
  enabled: true
  fullnameOverride: "idmappermysql"
  image:
    tag: "5.7"
    debug: false
  auth:
    database: "tenants"
    username: "idmapper"
    password: "password"
    rootPassword: "ethieTieCh8ahv"
  initdbScripts:
    setup.sql: |-
      CREATE DATABASE IF NOT EXISTS IdentityAccountMapper;
      GRANT ALL ON *.* TO 'root'@'%';
      GRANT ALL PRIVILEGES ON IdentityAccountMapper.* TO 'idmapper';

kafka:
  enabled: true
  replicas: 1
  image: "spotify/kafka"
  imagePullPolicy: "Always"
  advertised:
    host: "kafka"
    port: "9092"
  limits:
    memory: "512M"
    cpu: "500m"
  requests:
    memory: "512M"
    cpu: "100m"
  deployment:
    annotations:
      deployTime: "{{ .Values.deployTime }}"

account_mapper:
  enabled: true
  image: docker.io/openmf/ph-ee-identity-account-mapper:latest
  hostname: "identity-mapper.sandbox.mifos.io"
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
    tls:
      - secretName: sandbox-secret
    hosts:
      - host: identity-mapper.sandbox.mifos.io
        paths:
        - path: "/"
          backend:
            service:
              name: "ph-ee-identity-account-mapper"
              port:
                number: 80
  deployment:
    annotations:
      deployTime: "{{ .Values.deployTime }}"

  logging:
    level:
      ROOT: INFO

  async:
    core_pool_size: 10
    max_pool_size: 10
    queue_capacity: 100

  account_validation_enabled: "false"
  account_validator_connector: "gsma"

  spring:
    cache:
      time_to_live: 30
      time_to_idle: 30
      max_entries_heap: 1000
      max_byte_off_heap: 10
      max_byte_disk: 10
    datasource:
      url: jdbc:mysql:thin://operationsmysql:3306/identity_account_mapper
      username: mifos
      password: password

